{"version":3,"sources":["webpack:///./src/templates/journal-post.js"],"names":["StyleP","styled","p","StyleDiv","div","Title","h1","JournalPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","pageContext","previous","next","location","frontmatter","description","excerpt","style","display","marginBottom","rhythm","marginTop","date","dangerouslySetInnerHTML","__html","html","slug","fields","flexWrap","justifyContent","listStyle","padding","to","rel","React","Component","pageQuery"],"mappings":"8SAgBA,IAAMA,EAASC,IAAOC,EAAV,2EAAGD,CAAH,mCAINE,EAAWF,IAAOG,IAAV,6EAAGH,CAAH,mCAIRI,EAAQJ,IAAOK,GAAV,0EAAGL,CAAH,mDAKLM,E,gLACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAF7C,EAGoBP,KAAKC,MAAMO,YAA9BC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KAClB,OACE,kBAAC,IAAD,CAAQC,SAAUX,KAAKC,MAAMU,SAAUJ,MAAOH,GAC5C,kBAAC,IAAD,CAAKG,MAAOR,EAAKa,YAAYL,MAAOM,YAAad,EAAKe,UACtD,kBAACnB,EAAD,KAAQI,EAAKa,YAAYL,OACzB,kBAACjB,EAAD,CACEyB,MAAO,CACLC,QAAQ,QACRC,aAAcC,YAAO,GACrBC,UAAWD,aAAQ,KAGpBnB,EAAKa,YAAYQ,MAEpB,kBAAC3B,EAAD,CAAU4B,wBAAyB,CAAEC,OAAQvB,EAAKwB,QAClD,wBACER,MAAO,CACLE,aAAcC,YAAO,MAGzB,kBAAC,IAAD,CAASM,KAAMzB,EAAK0B,OAAOD,OAG3B,wBACET,MAAO,CACLC,QAAQ,OACRU,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGpB,GACC,kBAAC,OAAD,CAAMqB,GAAIrB,EAASgB,OAAOD,KAAMO,IAAI,QAApC,KACKtB,EAASG,YAAYL,QAI9B,4BACGG,GACC,kBAAC,OAAD,CAAMoB,GAAIpB,EAAKe,OAAOD,KAAMO,IAAI,QAC7BrB,EAAKE,YAAYL,MADpB,U,GA7CoByB,IAAMC,WAwDzBpC,YAER,IAAMqC,EAAS,c","file":"component---src-templates-journal-post-js-dc2f20826f0973cccfb9.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Barcode from 'react-barcode';\nimport 'typeface-ibm-plex-serif';\nimport hash from 'hash-sum';\n\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport PGPInfo from '../components/PGPInfo';\nimport { rhythm, scale } from '../utils/typography';\nimport ThemeContext from '../context/ThemeContext';\nimport ReactCSSTransitionReplace from 'react-css-transition-replace';\n\nimport styled from 'styled-components';\n\nconst StyleP = styled.p`\n  font-family: 'IBM Plex Serif';\n`;\n\nconst StyleDiv = styled.div`\n  font-family: 'Ibm Plex Serif';\n`;\n\nconst Title = styled.h1`\n  font-family: 'IBM Plex Serif';\n  font-weight: 600;\n`;\n\nclass JournalPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n    const { previous, next } = this.props.pageContext;\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\n        <Title>{post.frontmatter.title}</Title>\n        <StyleP\n          style={{\n            display: `block`,\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-1),\n          }}\n        >\n          {post.frontmatter.date}\n        </StyleP>\n        <StyleDiv dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <PGPInfo slug={post.fields.slug} />\n        {/* <Bio /> */}\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    );\n  }\n}\n\nexport default JournalPostTemplate;\n\nexport const pageQuery = graphql`\n  query JournalPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 165)\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}