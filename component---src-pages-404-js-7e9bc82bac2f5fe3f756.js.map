{"version":3,"sources":["webpack:///./src/components/Layout.js","webpack:///./src/components/seo.js","webpack:///./src/pages/404.js"],"names":["Header","styled","h1","StyledLink","Link","FlexContainer","div","props","darkMode","MainContainer","LeftContainer","rhythm","Layout","render","this","title","location","children","Consumer","themeObj","to","theme","React","Component","SEO","description","lang","meta","keywords","query","detailsQuery","data","metaDescription","site","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","NotFoundPage","siteTitle","pageQuery"],"mappings":"0MAYA,IAAMA,EAASC,IAAOC,GAAV,iEAAGD,CAAH,oDAMNE,EAAaF,YAAOG,KAAV,qEAAGH,CAAH,yDAMVI,EAAgBJ,IAAOK,IAAV,wEAAGL,CAAH,sFAKf,SAAAM,GACA,GAAIA,EAAMC,SACR,MAAM,kQAqBNC,EAAgBR,IAAOK,IAAV,wEAAGL,CAAH,aAIbS,EAAgBT,IAAOK,IAAV,wEAAGL,CAAH,gDAEJU,YAAO,IACTA,YAAO,KAAQA,YAAO,MAG7BC,E,gLACJC,OAAA,WAAU,IAAD,EAC+BC,KAAKP,MAAzBQ,GADX,EACCC,SADD,EACWD,OAAOE,EADlB,EACkBA,SAEzB,OACE,kBAAC,IAAaC,SAAd,MACG,SAAAC,GAAQ,OACP,kBAACd,EAAD,CAAeG,SAAUW,EAASX,UAChC,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,kBAACV,EAAD,KACE,kBAACG,EAAD,CAAYiB,GAAE,KAAQL,IAGxB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAwBM,MAAOF,IAC9BF,IAGL,kBAAC,IAAD,CAAQT,SAAUW,EAASX,gB,GAnBlBc,IAAMC,WA2BZX,O,wGCpFf,SAASY,EAAT,GAA4D,IAA7CC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,SAAUb,EAAS,EAATA,MAChD,OACE,kBAAC,IAAD,CACEc,MAAOC,EACPjB,OAAQ,SAAAkB,GACN,IAAMC,EACJP,GAAeM,EAAKE,KAAKC,aAAaT,YACxC,OACE,kBAAC,IAAD,CACEU,eAAgB,CACdT,QAEFX,MAAOA,EACPqB,cAAa,QAAUL,EAAKE,KAAKC,aAAanB,MAC9CY,KAAM,CACJ,CAAEU,KAAM,UAAWC,QAAS,SAC5B,CACED,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAASvB,GAEX,CACEwB,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASP,EAAKE,KAAKC,aAAaM,QAElC,CACEH,KAAK,gBACLC,QAASvB,GAEX,CACEsB,KAAK,sBACLC,QAASN,IAGVS,OACCb,EAASc,OAAS,EACd,CACEL,KAAK,WACLC,QAASV,EAASe,KAAT,OAEX,IAELF,OAAOd,MAvDlB,SA+DJH,EAAIoB,aAAe,CACjBlB,KAAK,KACLC,KAAM,GACNC,SAAU,IAWGJ,MAEf,IAAMM,EAAY,c,wIChFZe,E,gLACJhC,OAAA,WAAU,IAEFiC,EADWhC,KAAKP,MAAdwB,KACeE,KAAKC,aAAanB,MAEzC,OACE,kBAAC,IAAD,CAAQC,SAAUF,KAAKP,MAAMS,SAAUD,MAAO+B,GAC5C,kBAAC,IAAD,CAAK/B,MAAM,mBACX,yCACA,wF,GATmBO,IAAMC,WAelBsB,YAER,IAAME,EAAS","file":"component---src-pages-404-js-7e9bc82bac2f5fe3f756.js","sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport Footer from '../components/Footer';\n\nimport Menu from '../components/Menu';\n\n// import './layout.css';\nimport ThemeContext from '../context/ThemeContext';\nimport { rhythm } from '../utils/typography';\nimport styled from 'styled-components';\nimport DarkModeSwitcherButton from '../components/DarkmodeSwitcherButton';\n\nconst Header = styled.h1`\n  margin-top: 0;\n  font-weight: 300;\n  font-size: 1.7rem;\n`;\n\nconst StyledLink = styled(Link)`\n  box-shadow: none;\n  text-decoration: none;\n  color: inherit;\n`;\n\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  transition: all 0.3s ease;\n  ${props => {\n    if (props.darkMode) {\n      return `background-color: #2a2b2d;\n  color: #fff;\n  transition: all 0.3s ease;\n  \n  a, a:visited {\n    color: rgb(73, 223, 255);\n  }\n  \n  hr {\n    background: #505050;\n  }\n  \n  blockquote: {\n    color: inherit;\n    border-color: inherit;\n  }\n  `;\n    }\n  }}\n`;\n\nconst MainContainer = styled.div`\n  flex: 1;\n`;\n\nconst LeftContainer = styled.div`\n  margin: 0 10%;\n  max-width: ${rhythm(24)};\n  padding: ${rhythm(1.5)} ${rhythm(3 / 4)};\n`;\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props;\n\n    return (\n      <ThemeContext.Consumer>\n        {themeObj => (\n          <FlexContainer darkMode={themeObj.darkMode}>\n            <MainContainer>\n              <LeftContainer>\n                <Header>\n                  <StyledLink to={`/`}>{title}</StyledLink>\n                </Header>\n\n                <Menu />\n                <DarkModeSwitcherButton theme={themeObj} />\n                {children}\n              </LeftContainer>\n            </MainContainer>\n            <Footer darkMode={themeObj.darkMode} />\n          </FlexContainer>\n        )}\n      </ThemeContext.Consumer>\n    );\n  }\n}\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              { name: 'charSet', content: 'utf-8' },\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/seo';\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    );\n  }\n}\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}