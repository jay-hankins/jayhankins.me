{"version":3,"sources":["webpack:///./src/components/Layout.js","webpack:///./src/pages/journal.jsx"],"names":["Header","styled","h1","StyledLink","Link","FlexContainer","div","props","darkMode","MainContainer","LeftContainer","rhythm","Layout","render","this","title","location","children","Consumer","themeObj","to","theme","React","Component","Title","h3","P","p","Journal","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","keywords","map","node","frontmatter","fields","slug","key","style","marginBottom","fontWeight","boxShadow","date","dangerouslySetInnerHTML","__html","excerpt","pageQuery"],"mappings":"0MAYA,IAAMA,EAASC,IAAOC,GAAV,iEAAGD,CAAH,oDAMNE,EAAaF,YAAOG,KAAV,qEAAGH,CAAH,yDAMVI,EAAgBJ,IAAOK,IAAV,wEAAGL,CAAH,sFAKf,SAAAM,GACA,GAAIA,EAAMC,SACR,MAAM,kQAqBNC,EAAgBR,IAAOK,IAAV,wEAAGL,CAAH,aAIbS,EAAgBT,IAAOK,IAAV,wEAAGL,CAAH,gDAEJU,YAAO,IACTA,YAAO,KAAQA,YAAO,MAG7BC,E,gLACJC,OAAA,WAAU,IAAD,EAC+BC,KAAKP,MAAzBQ,GADX,EACCC,SADD,EACWD,OAAOE,EADlB,EACkBA,SAEzB,OACE,kBAAC,IAAaC,SAAd,MACG,SAAAC,GAAQ,OACP,kBAACd,EAAD,CAAeG,SAAUW,EAASX,UAChC,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,kBAACV,EAAD,KACE,kBAACG,EAAD,CAAYiB,GAAE,KAAQL,IAGxB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAwBM,MAAOF,IAC9BF,IAGL,kBAAC,IAAD,CAAQT,SAAUW,EAASX,gB,GAnBlBc,IAAMC,WA2BZX,O,wKCjFf,IAAMY,EAAQvB,IAAOwB,GAAV,oEAAGxB,CAAH,mCAILyB,EAAIzB,IAAO0B,EAAV,gEAAG1B,CAAH,mCAGD2B,E,gLACJf,OAAA,WAAU,IACAgB,EAASf,KAAKP,MAAdsB,KACFC,EAAYD,EAAKE,KAAKC,aAAajB,MACnCkB,EAAQJ,EAAKK,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQnB,SAAUF,KAAKP,MAAMS,SAAUD,MAAOe,GAC5C,kBAAC,IAAD,CACEf,MAAM,OACNqB,SAAU,CAAC,OAAD,wEAYZ,uCACCH,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNvB,EAAQuB,EAAKC,YAAYxB,OAASuB,EAAKE,OAAOC,KACpD,OACE,yBAAKC,IAAKJ,EAAKE,OAAOC,MACpB,kBAACjB,EAAD,CACEmB,MAAO,CACLC,aAAcjC,YAAO,EAAI,GACzBkC,WAAY,MAGd,kBAAC,IAAD,CAAMF,MAAO,CAAEG,UAAU,QAAW1B,GAAIkB,EAAKE,OAAOC,MACjD1B,IAGL,+BAAQuB,EAAKC,YAAYQ,MACzB,kBAACrB,EAAD,CAAGsB,wBAAyB,CAAEC,OAAQX,EAAKY,iB,GAtCnC5B,IAAMC,WA+CbK,YAER,IAAMuB,EAAS","file":"component---src-pages-journal-jsx-a35f4d5cb26b916ef378.js","sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport Footer from '../components/Footer';\n\nimport Menu from '../components/Menu';\n\n// import './layout.css';\nimport ThemeContext from '../context/ThemeContext';\nimport { rhythm } from '../utils/typography';\nimport styled from 'styled-components';\nimport DarkModeSwitcherButton from '../components/DarkmodeSwitcherButton';\n\nconst Header = styled.h1`\n  margin-top: 0;\n  font-weight: 300;\n  font-size: 1.7rem;\n`;\n\nconst StyledLink = styled(Link)`\n  box-shadow: none;\n  text-decoration: none;\n  color: inherit;\n`;\n\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  transition: all 0.3s ease;\n  ${props => {\n    if (props.darkMode) {\n      return `background-color: #2a2b2d;\n  color: #fff;\n  transition: all 0.3s ease;\n  \n  a, a:visited {\n    color: rgb(73, 223, 255);\n  }\n  \n  hr {\n    background: #505050;\n  }\n  \n  blockquote: {\n    color: inherit;\n    border-color: inherit;\n  }\n  `;\n    }\n  }}\n`;\n\nconst MainContainer = styled.div`\n  flex: 1;\n`;\n\nconst LeftContainer = styled.div`\n  margin: 0 10%;\n  max-width: ${rhythm(24)};\n  padding: ${rhythm(1.5)} ${rhythm(3 / 4)};\n`;\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props;\n\n    return (\n      <ThemeContext.Consumer>\n        {themeObj => (\n          <FlexContainer darkMode={themeObj.darkMode}>\n            <MainContainer>\n              <LeftContainer>\n                <Header>\n                  <StyledLink to={`/`}>{title}</StyledLink>\n                </Header>\n\n                <Menu />\n                <DarkModeSwitcherButton theme={themeObj} />\n                {children}\n              </LeftContainer>\n            </MainContainer>\n            <Footer darkMode={themeObj.darkMode} />\n          </FlexContainer>\n        )}\n      </ThemeContext.Consumer>\n    );\n  }\n}\n\nexport default Layout;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/seo';\nimport { rhythm } from '../utils/typography';\nimport styled from 'styled-components';\n\nconst Title = styled.h3`\n  font-family: 'IBM Plex Serif';\n`;\n\nconst P = styled.p`\n  font-family: 'IBM Plex Serif';\n`;\nclass Journal extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"Blog\"\n          keywords={[\n            `blog`,\n            `javascript`,\n            `react`,\n            `gatsby`,\n            `purdue`,\n            `mac`,\n            `unix`,\n            `web`,\n            `engineer`,\n          ]}\n        />\n        <h2>Journal</h2>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug;\n          return (\n            <div key={node.fields.slug}>\n              <Title\n                style={{\n                  marginBottom: rhythm(1 / 8),\n                  fontWeight: 500,\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </Title>\n              <small>{node.frontmatter.date}</small>\n              <P dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          );\n        })}\n      </Layout>\n    );\n  }\n}\n\nexport default Journal;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        fields: { draft: { eq: false } }\n        fileAbsolutePath: { glob: \"**/journal/**/**.md\" }\n      }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 165)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}